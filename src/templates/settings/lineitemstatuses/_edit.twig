{% extends "commerce/_layouts/cp" %}

{% set crumbs = [
    { label: 'Commerce ' ~ 'Settings'|t('commerce'), url: url('commerce/settings') },
    { label: 'Line Item Statuses'|t('commerce'), url: url('commerce/settings/lineitemstatuses') }
] %}

{% set selectedSubnavItem = 'settings' %}

{% set fullPageForm = true %}

{% set selectedTab = 'settings' %}
{% import "_includes/forms" as forms %}

{% block content %}
    {{ actionInput('commerce/line-item-statuses/save') }}
    {{ redirectInput('commerce/settings/lineitemstatuses') }}
    {{ hiddenInput('storeId', lineItemStatus.storeId) }}
    {% if lineItemStatus.id %}
        {{ hiddenInput("sortOrder", lineItemStatus.sortOrder) }}
        {{ hiddenInput("id", lineItemStatus.id) }}
    {% endif %}

    {{ forms.textField({
        label: "Name"|t('commerce'),
        first: true,
        instructions: "What this status will be called in the control panel."|t('commerce'),
        id: 'name',
        name: 'name',
        value: lineItemStatus.name,
        errors: lineItemStatus.getErrors('name'),
        required: true
    }) }}

    {{ forms.textField({
        label: "Handle"|t('commerce'),
        instructions: "How you’ll refer to this status in the templates."|t('commerce'),
        id: 'handle',
        class: 'code',
        name: 'handle',
        value: lineItemStatus.handle,
        errors: lineItemStatus.getErrors('handle'),
        required: true
    }) }}

    {% set statusColor = not lineItemStatus.id and nextAvailableColor is defined and nextAvailableColor and not lineItemStatus.hasErrors() ? nextAvailableColor : lineItemStatus.color %}
    {{ forms.hidden({
        id: 'color',
        name: 'color',
        value: statusColor
    }) }}

    {% set colorField %}
        <div>
            <a id="color-menu-btn" class="btn menubtn" href="#">
                <span class="status {{ statusColor }}"></span>{{ statusColor|t('commerce')|title }}
            </a>
            <div class="menu">
                <ul class="padded">
                    {% for color in ['green','orange', 'red', 'blue', 'yellow', 'pink', 'purple', 'turquoise', 'light', 'grey', 'black'] %}
                        <li>
                            <a data-val="{{ color }}" {% if statusColor == color %}class="sel"{% endif %} href="#">
                                <span class="status {{ color }}"></span>{{ color|t('commerce')|title }}
                            </a>
                        </li>
                    {% endfor %}
                </ul>
            </div>
        </div>
    {% endset %}

    {{ forms.field({
        label: 'Color'|t('commerce'),
        instructions: 'Choose a color to represent the order’s status'|t
    },colorField) }}

    {{ forms.lightswitchField({
        label: "New line items get this status by default when the order is completed"|t('commerce'),
        name: 'default',
        value: 1,
        on: lineItemStatus.default,
        errors: lineItemStatus.getErrors('default')
    }) }}
{% endblock %}

{% js %}
    {% if not lineItemStatus.handle %}new Craft.HandleGenerator('#name', '#handle');{% endif %}
    $(function () {
      $colorSelect = $('#color-menu-btn');
      let menuBtn = $colorSelect.data('menubtn');
      if (!menuBtn) {
        menuBtn = new Garnish.MenuBtn($colorSelect);
      }
      menuBtn.on('optionSelect', ev => {
        var val = $(ev.option).data('val');
        $('#color').val(val);
        var html = "<span class='status "+val+"'></span>"+Craft.uppercaseFirst(val);
        $colorSelect.html(html);
      })
    });
{% endjs %}
