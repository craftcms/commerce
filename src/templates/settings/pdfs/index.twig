{% extends "commerce/_layouts/settings" %}
{% do view.registerAssetBundle('craft\\web\\assets\\admintable\\AdminTableAsset') -%}
{% do view.registerTranslations('commerce', [
    'Bcc',
    'Default?',
    'Description',
    'Handle',
    'Name',
    'No PDFs exist yet.',
    'Yes',
]) %}

{% block actionButton %}
    <a href="{{ url('commerce/settings/pdfs/new') }}" class="btn submit add icon">{{ 'New PDF'|t('commerce') }}</a>
{% endblock %}

{% block content %}
    <div id="pdfs-vue-admin-table"></div>
{% endblock %}

{% set tableData = [] %}
{% for pdf in pdfs %}
    {% set tableData = tableData|merge([{
        id: pdf.id,
        title: pdf.name|t('site'),
        handle: pdf.handle|t('site'),
        status: pdf.enabled ? true : false,
        url: url('commerce/settings/pdfs/'~pdf.id),
        isDefault: pdf.isDefault ? true : false,
    }]) %}
{% endfor %}

{% js %}
    var columns = [
        { name: '__slot:title', title: Craft.t('commerce', 'Name') },
        { name: 'handle', title: Craft.t('commerce', 'Handle') },
        {
            name: 'isDefault',
            title: Craft.t('commerce', 'Default?'),
            callback: function(value) {
                if (value) {
                    return '<span data-icon="check" title="'+Craft.escapeHtml(Craft.t('commerce', 'Yes'))+'"></span>';
                }
            }
        }
    ];

    new Craft.VueAdminTable({
        columns: columns,
        container: '#pdfs-vue-admin-table',
        deleteAction: 'commerce/pdfs/delete',
        emptyMessage: Craft.t('commerce', 'No PDFs exist yet.'),
        reorderAction: 'commerce/pdfs/reorder',
        reorderFailMessage:    Craft.t('commerce', 'Couldnâ€™t reorder PDFs.'),
        reorderSuccessMessage: Craft.t('commerce', 'PDFs reordered.'),
        tableData: {{ tableData|json_encode|raw }},
    });
{% endjs %}
