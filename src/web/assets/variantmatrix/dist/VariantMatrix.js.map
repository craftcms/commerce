{"version":3,"file":"VariantMatrix.js","mappings":"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","sources":["webpack:///./VariantMatrix.js"],"sourcesContent":["(function($) {\n\n\n    if (typeof Craft.Commerce === typeof undefined) {\n        Craft.Commerce = {};\n    }\n\n\n    /**\n     * Variant Matrix class\n     */\n    Craft.Commerce.VariantMatrix = Garnish.Base.extend(\n        {\n            id: null,\n            fieldBodyHtml: null,\n            fieldFootHtml: null,\n            inputNamePrefix: null,\n            inputIdPrefix: null,\n\n            $container: null,\n            $variantContainer: null,\n            $addVariantBtn: null,\n\n            variantSort: null,\n            variantSelect: null,\n            defaultVariant: null,\n            totalNewVariants: 0,\n            singleColumnMode: false,\n\n            init: function(id, fieldBodyHtml, fieldFootHtml, inputNamePrefix) {\n                this.id = id;\n                this.fieldBodyHtml = fieldBodyHtml;\n                this.fieldFootHtml = fieldFootHtml;\n                this.inputNamePrefix = inputNamePrefix;\n                this.inputIdPrefix = Craft.formatInputId(this.inputNamePrefix);\n\n                this.$container = $('#' + this.id);\n                this.$variantContainer = this.$container.children('.blocks');\n                this.$addVariantBtn = this.$container.children('.btn');\n\n                var $variants = this.$variantContainer.children(),\n                    collapsedVariants = Craft.Commerce.VariantMatrix.getCollapsedVariantIds();\n\n                this.variantSort = new Garnish.DragSort($variants, {\n                    handle: '> .actions > .move',\n                    axis: 'y',\n                    filter: $.proxy(function() {\n                        // Only return all the selected items if the target item is selected\n                        if (this.variantSort.$targetItem.hasClass('sel')) {\n                            return this.variantSelect.getSelectedItems();\n                        }\n                        else {\n                            return this.variantSort.$targetItem;\n                        }\n                    }, this),\n                    collapseDraggees: true,\n                    magnetStrength: 4,\n                    helperLagBase: 1.5,\n                    helperOpacity: 0.9,\n                    onSortChange: $.proxy(function() {\n                        this.variantSelect.resetItemOrder();\n                    }, this)\n                });\n\n                this.variantSelect = new Garnish.Select(this.$variantContainer, $variants, {\n                    multi: true,\n                    vertical: true,\n                    handle: '> .checkbox, > .titlebar',\n                    checkboxMode: true\n                });\n\n                for (var i = 0; i < $variants.length; i++) {\n                    var $variant = $variants.eq(i),\n                        id = $variant.data('id');\n\n                    // Is this a new variant?\n                    var newMatch = (typeof id === 'string' && id.match(/new(\\d+)/));\n\n                    if (newMatch && newMatch[1] > this.totalNewVariants) {\n                        this.totalNewVariants = parseInt(newMatch[1]);\n                    }\n\n                    var variant = new Variant(this, $variant);\n\n                    if (variant.id && $.inArray('' + variant.id, collapsedVariants) !== -1) {\n                        variant.collapse();\n                    }\n\n                    // Init the unlimited stock checkbox\n                    Craft.Commerce.initUnlimitedStockCheckbox($variant);\n                }\n\n                this.addListener(this.$addVariantBtn, 'click', function() {\n                    this.addVariant();\n                });\n\n                this.addListener(this.$container, 'resize', 'handleContainerResize');\n                Garnish.$doc.ready($.proxy(this, 'handleContainerResize'));\n\n                if (this.$container.width()) {\n                    this.handleContainerResize();\n                }\n            },\n\n            setDefaultVariant: function(variant) {\n                if (this.defaultVariant) {\n                    this.defaultVariant.unsetAsDefault();\n                }\n\n                variant.setAsDefault();\n                this.defaultVariant = variant;\n            },\n\n            addVariant: function($insertBefore) {\n                this.totalNewVariants++;\n\n                var id = 'new' + this.totalNewVariants;\n\n                var $variant = $(\n                    '<div class=\"variant-matrixblock matrixblock\" data-id=\"' + id + '\">' +\n                    '<input type=\"hidden\" name=\"' + this.inputNamePrefix + '[' + id + '][enabled]\" value=\"1\"/>' +\n                    '<input class=\"default-input\" type=\"hidden\" name=\"' + this.inputNamePrefix + '[' + id + '][isDefault]\" value=\"\">' +\n                    '<div class=\"titlebar\">' +\n                    '<div class=\"preview\"></div>' +\n                    '</div>' +\n                    '<div class=\"checkbox\" title=\"' + Craft.t('commerce', 'Select') + '\"></div>' +\n                    '<div class=\"actions\">' +\n                    '<div class=\"status off\" title=\"' + Craft.t('commerce', 'Disabled') + '\"></div>' +\n                    '<a class=\"default-btn\" title=\"' + Craft.t('commerce', 'Set as the default variant') + '\">' + Craft.t('commerce', 'Default') + '</a> ' +\n                    '<a class=\"settings icon menubtn\" title=\"' + Craft.t('commerce', 'Actions') + '\" role=\"button\"></a> ' +\n                    '<div class=\"menu\">' +\n                    '<ul class=\"padded\">' +\n                    '<li><a data-icon=\"collapse\" data-action=\"collapse\">' + Craft.t('commerce', 'Collapse') + '</a></li>' +\n                    '<li class=\"hidden\"><a data-icon=\"expand\" data-action=\"expand\">' + Craft.t('commerce', 'Expand') + '</a></li>' +\n                    '<li><a data-icon=\"disabled\" data-action=\"disable\">' + Craft.t('commerce', 'Disable') + '</a></li>' +\n                    '<li class=\"hidden\"><a data-icon=\"enabled\" data-action=\"enable\">' + Craft.t('commerce', 'Enable') + '</a></li>' +\n                    '</ul>' +\n                    '<hr class=\"padded\"/>' +\n                    '<ul class=\"padded\">' +\n                    '<li><a data-icon=\"+\" data-action=\"add\">' + Craft.t('commerce', 'Add variant above') + '</a></li>' +\n                    '</ul>' +\n                    '<hr class=\"padded\"/>' +\n                    '<ul class=\"padded\">' +\n                    '<li><a data-icon=\"remove\" data-action=\"delete\">' + Craft.t('commerce', 'Delete') + '</a></li>' +\n                    '</ul>' +\n                    '</div>' +\n                    '<a class=\"move icon\" title=\"' + Craft.t('commerce', 'Reorder') + '\" role=\"button\"></a> ' +\n                    '</div>' +\n                    '</div>'\n                );\n\n                if ($insertBefore) {\n                    $variant.insertBefore($insertBefore);\n                }\n                else {\n                    $variant.appendTo(this.$variantContainer);\n                }\n\n                var $fieldsContainer = $('<div class=\"fields\"/>').appendTo($variant),\n                    bodyHtml = this.getParsedVariantHtml(this.fieldBodyHtml, id),\n                    footHtml = this.getParsedVariantHtml(this.fieldFootHtml, id);\n\n                var $body = $(bodyHtml);\n                $body.find('#related-sales-field').remove();\n\n                $body.appendTo($fieldsContainer);\n\n                if (this.singleColumnMode) {\n                    this.setVariantsToSingleColMode($variant);\n                }\n\n                // Animate the variant into position\n                $variant.css(this.getHiddenVariantCss($variant)).velocity({\n                    opacity: 1,\n                    'margin-bottom': 10\n                }, 'fast', $.proxy(function() {\n                    $variant.css('margin-bottom', '');\n                    Garnish.$bod.append(footHtml);\n                    Craft.initUiElements($fieldsContainer);\n                    Craft.Commerce.initUnlimitedStockCheckbox($variant);\n                    var variant = new Variant(this, $variant);\n                    this.variantSort.addItems($variant);\n                    this.variantSelect.addItems($variant);\n\n                    Garnish.requestAnimationFrame(function() {\n                        // Scroll to the variant\n                        Garnish.scrollContainerToElement($variant);\n                    });\n\n                    // If this is the only variant, set it as the default\n                    if (this.$variantContainer.children().length === 1) {\n                        this.setDefaultVariant(variant);\n                    }\n                }, this));\n            },\n\n            collapseSelectedVariants: function() {\n                this.callOnSelectedVariants('collapse');\n            },\n\n            expandSelectedVariants: function() {\n                this.callOnSelectedVariants('expand');\n            },\n\n            disableSelectedVariants: function() {\n                this.callOnSelectedVariants('disable');\n            },\n\n            enableSelectedVariants: function() {\n                this.callOnSelectedVariants('enable');\n            },\n\n            deleteSelectedVariants: function() {\n                this.callOnSelectedVariants('selfDestruct');\n            },\n\n            callOnSelectedVariants: function(fn) {\n                for (var i = 0; i < this.variantSelect.$selectedItems.length; i++) {\n                    this.variantSelect.$selectedItems.eq(i).data('variant')[fn]();\n                }\n            },\n\n            getHiddenVariantCss: function($variant) {\n                return {\n                    opacity: 0,\n                    marginBottom: -($variant.outerHeight())\n                };\n            },\n\n            getParsedVariantHtml: function(html, id) {\n                if (typeof html === 'string') {\n                    return html.replace(/__VARIANT__/g, id);\n                }\n                else {\n                    return '';\n                }\n            },\n\n            handleContainerResize: function() {\n                if (this.$container.width() < 700) {\n                    if (!this.singleColumnMode) {\n                        this.setVariantsToSingleColMode(this.variantSort.$items);\n                        this.singleColumnMode = true;\n                    }\n                } else {\n                    if (this.singleColumnMode) {\n                        this.setVariantsToTwoColMode(this.variantSort.$items);\n                        this.variantSort.$items.removeClass('single-col');\n                        this.singleColumnMode = false;\n                    }\n                }\n            },\n\n            setVariantsToSingleColMode: function($variants) {\n                $variants\n                    .addClass('single-col')\n                    .find('> .fields > .custom-fields').addClass('meta');\n            },\n\n            setVariantsToTwoColMode: function($variants) {\n                $variants\n                    .removeClass('single-col')\n                    .find('> .fields > .custom-fields').removeClass('meta');\n            }\n        },\n        {\n            collapsedVariantStorageKey: 'Craft-' + Craft.siteUid + '.Commerce.VariantMatrix.collapsedVariants',\n\n            getCollapsedVariantIds: function() {\n                if (typeof localStorage[Craft.Commerce.VariantMatrix.collapsedVariantStorageKey] === 'string') {\n                    return Craft.filterArray(localStorage[Craft.Commerce.VariantMatrix.collapsedVariantStorageKey].split(','));\n                }\n                else {\n                    return [];\n                }\n            },\n\n            setCollapsedVariantIds: function(ids) {\n                localStorage[Craft.Commerce.VariantMatrix.collapsedVariantStorageKey] = ids.join(',');\n            },\n\n            rememberCollapsedVariantId: function(id) {\n                if (typeof Storage !== 'undefined') {\n                    var collapsedVariants = Craft.Commerce.VariantMatrix.getCollapsedVariantIds();\n\n                    if ($.inArray('' + id, collapsedVariants) === -1) {\n                        collapsedVariants.push(id);\n                        Craft.Commerce.VariantMatrix.setCollapsedVariantIds(collapsedVariants);\n                    }\n                }\n            },\n\n            forgetCollapsedVariantId: function(id) {\n                if (typeof Storage !== 'undefined') {\n                    var collapsedVariants = Craft.Commerce.VariantMatrix.getCollapsedVariantIds(),\n                        collapsedVariantsIndex = $.inArray('' + id, collapsedVariants);\n\n                    if (collapsedVariantsIndex !== -1) {\n                        collapsedVariants.splice(collapsedVariantsIndex, 1);\n                        Craft.Commerce.VariantMatrix.setCollapsedVariantIds(collapsedVariants);\n                    }\n                }\n            }\n        });\n\n\n    var Variant = Garnish.Base.extend(\n        {\n            matrix: null,\n            $container: null,\n            $titlebar: null,\n            $fieldsContainer: null,\n            $previewContainer: null,\n            $actionMenu: null,\n            $collapsedInput: null,\n            $defaultInput: null,\n            $defaultBtn: null,\n\n            isNew: null,\n            id: null,\n\n            collapsed: false,\n\n            init: function(matrix, $container) {\n                this.matrix = matrix;\n                this.$container = $container;\n                this.$titlebar = $container.children('.titlebar');\n                this.$previewContainer = this.$titlebar.children('.preview');\n                this.$fieldsContainer = $container.children('.fields');\n                this.$defaultInput = this.$container.children('.default-input');\n                this.$defaultBtn = this.$container.find('> .actions > .default-btn');\n\n                this.$container.data('variant', this);\n\n                this.id = this.$container.data('id');\n                this.isNew = (!this.id || (typeof this.id === 'string' && this.id.substr(0, 3) === 'new'));\n\n                var $menuBtn = this.$container.find('> .actions > .settings'),\n                    menuBtn = new Garnish.MenuBtn($menuBtn);\n\n                this.$actionMenu = menuBtn.menu.$container;\n\n                menuBtn.menu.settings.onOptionSelect = $.proxy(this, 'onMenuOptionSelect');\n\n                // Was this variant already collapsed?\n                if (Garnish.hasAttr(this.$container, 'data-collapsed')) {\n                    this.collapse();\n                }\n\n                this.addListener(this.$titlebar, 'dblclick', function(ev) {\n                    ev.preventDefault();\n                    this.toggle();\n                });\n\n                // Is this variant the default?\n                if (this.$defaultInput.val() === '1') {\n                    this.matrix.setDefaultVariant(this);\n                }\n\n                this.addListener(this.$defaultBtn, 'click', function(ev) {\n                    ev.preventDefault();\n                    this.matrix.setDefaultVariant(this);\n                });\n            },\n\n            toggle: function() {\n                if (this.collapsed) {\n                    this.expand();\n                }\n                else {\n                    this.collapse(true);\n                }\n            },\n\n            collapse: function(animate) {\n                if (this.collapsed) {\n                    return;\n                }\n\n                this.$container.addClass('collapsed');\n\n                var previewHtml = '',\n                    $fields = this.$fieldsContainer.find('> .meta > .field:first-child, > .custom-fields > .field');\n\n                for (var i = 0; i < $fields.length; i++) {\n                    var $field = $($fields[i]),\n                        $inputs = $field.children('.input').find('select,input[type!=\"hidden\"],textarea,.label'),\n                        inputPreviewText = '';\n\n                    for (var j = 0; j < $inputs.length; j++) {\n                        var $input = $($inputs[j]),\n                            value;\n\n                        if ($input.hasClass('label')) {\n                            var $maybeLightswitchContainer = $input.parent().parent();\n\n                            if ($maybeLightswitchContainer.hasClass('lightswitch') && (\n                                    ($maybeLightswitchContainer.hasClass('on') && $input.hasClass('off')) ||\n                                    (!$maybeLightswitchContainer.hasClass('on') && $input.hasClass('on'))\n                                )) {\n                                continue;\n                            }\n\n                            value = $input.text();\n                        }\n                        else {\n                            value = Craft.getText(Garnish.getInputPostVal($input));\n                        }\n\n                        if (value instanceof Array) {\n                            value = value.join(', ');\n                        }\n\n                        if (value) {\n                            value = Craft.trim(value);\n\n                            if (value) {\n                                if (inputPreviewText) {\n                                    inputPreviewText += ', ';\n                                }\n\n                                inputPreviewText += value;\n                            }\n                        }\n                    }\n\n                    if (inputPreviewText) {\n                        previewHtml += (previewHtml ? ' <span>|</span> ' : '') + inputPreviewText;\n                    }\n                }\n\n                this.$previewContainer.html(previewHtml);\n\n                this.$fieldsContainer.velocity('stop');\n                this.$container.velocity('stop');\n\n                if (animate) {\n                    this.$fieldsContainer.velocity('fadeOut', {duration: 'fast'});\n                    this.$container.velocity({height: 30}, 'fast');\n                }\n                else {\n                    this.$previewContainer.show();\n                    this.$fieldsContainer.hide();\n                    this.$container.css({height: 30});\n                }\n\n                setTimeout($.proxy(function() {\n                    this.$actionMenu.find('a[data-action=collapse]:first').parent().addClass('hidden');\n                    this.$actionMenu.find('a[data-action=expand]:first').parent().removeClass('hidden');\n                }, this), 200);\n\n                // Remember that?\n                if (!this.isNew) {\n                    Craft.Commerce.VariantMatrix.rememberCollapsedVariantId(this.id);\n                }\n                else {\n                    if (!this.$collapsedInput) {\n                        this.$collapsedInput = $('<input type=\"hidden\" name=\"' + this.matrix.inputNamePrefix + '[' + this.id + '][collapsed]\" value=\"1\"/>').appendTo(this.$container);\n                    }\n                    else {\n                        this.$collapsedInput.val('1');\n                    }\n                }\n\n                this.collapsed = true;\n            },\n\n            expand: function() {\n                if (!this.collapsed) {\n                    return;\n                }\n\n                this.$container.removeClass('collapsed');\n\n                this.$fieldsContainer.velocity('stop');\n                this.$container.velocity('stop');\n\n                var collapsedContainerHeight = this.$container.height();\n                this.$container.height('auto');\n                this.$fieldsContainer.css('display', 'flex');\n                var expandedContainerHeight = this.$container.height();\n                this.$container.height(collapsedContainerHeight);\n                this.$fieldsContainer.hide().velocity('fadeIn', {duration: 'fast', display: 'flex'});\n                this.$container.velocity({height: expandedContainerHeight}, 'fast', $.proxy(function() {\n                    this.$previewContainer.html('');\n                    this.$container.height('auto');\n                }, this));\n\n                setTimeout($.proxy(function() {\n                    this.$actionMenu.find('a[data-action=collapse]:first').parent().removeClass('hidden');\n                    this.$actionMenu.find('a[data-action=expand]:first').parent().addClass('hidden');\n                }, this), 200);\n\n                // Remember that?\n                if (!this.isNew && typeof Storage !== 'undefined') {\n                    var collapsedVariants = Craft.Commerce.VariantMatrix.getCollapsedVariantIds(),\n                        collapsedVariantsIndex = $.inArray('' + this.id, collapsedVariants);\n\n                    if (collapsedVariantsIndex !== -1) {\n                        collapsedVariants.splice(collapsedVariantsIndex, 1);\n                        Craft.Commerce.VariantMatrix.setCollapsedVariantIds(collapsedVariants);\n                    }\n                }\n\n                if (!this.isNew) {\n                    Craft.Commerce.VariantMatrix.forgetCollapsedVariantId(this.id);\n                }\n                else if (this.$collapsedInput) {\n                    this.$collapsedInput.val('');\n                }\n\n                this.collapsed = false;\n            },\n\n            disable: function() {\n                if (this.isDefault()) {\n                    // Can't disable the default variant\n                    return false;\n                }\n\n                this.$container.children('input[name$=\"[enabled]\"]:first').val('');\n                this.$container.addClass('disabled');\n\n                setTimeout($.proxy(function() {\n                    this.$actionMenu.find('a[data-action=disable]:first').parent().addClass('hidden');\n                    this.$actionMenu.find('a[data-action=enable]:first').parent().removeClass('hidden');\n                }, this), 200);\n\n                this.collapse(true);\n\n                return true;\n            },\n\n            enable: function() {\n                this.$container.children('input[name$=\"[enabled]\"]:first').val('1');\n                this.$container.removeClass('disabled');\n\n                setTimeout($.proxy(function() {\n                    this.$actionMenu.find('a[data-action=disable]:first').parent().removeClass('hidden');\n                    this.$actionMenu.find('a[data-action=enable]:first').parent().addClass('hidden');\n                }, this), 200);\n\n                return true;\n            },\n\n            setAsDefault: function() {\n                this.$defaultInput.val('1');\n                this.$defaultBtn\n                    .addClass('sel')\n                    .attr('title', '');\n\n                // Default variants must be enabled\n                this.enable();\n                this.$actionMenu.find('a[data-action=disable]:first').parent().addClass('disabled');\n            },\n\n            unsetAsDefault: function() {\n                this.$defaultInput.val('');\n                this.$defaultBtn\n                    .removeClass('sel')\n                    .attr('title', 'Set as the default variant');\n\n                this.$actionMenu.find('a[data-action=disable]:first').parent().removeClass('disabled');\n            },\n\n            isDefault: function() {\n                return this.$defaultInput.val() === '1';\n            },\n\n            onMenuOptionSelect: function(option) {\n                var batchAction = (this.matrix.variantSelect.totalSelected > 1 && this.matrix.variantSelect.isSelected(this.$container)),\n                    $option = $(option);\n\n                switch ($option.data('action')) {\n                    case 'collapse': {\n                        if (batchAction) {\n                            this.matrix.collapseSelectedVariants();\n                        }\n                        else {\n                            this.collapse(true);\n                        }\n\n                        break;\n                    }\n\n                    case 'expand': {\n                        if (batchAction) {\n                            this.matrix.expandSelectedVariants();\n                        }\n                        else {\n                            this.expand();\n                        }\n\n                        break;\n                    }\n\n                    case 'disable': {\n                        if (batchAction) {\n                            this.matrix.disableSelectedVariants();\n                        }\n                        else {\n                            this.disable();\n                        }\n\n                        break;\n                    }\n\n                    case 'enable': {\n                        if (batchAction) {\n                            this.matrix.enableSelectedVariants();\n                        }\n                        else {\n                            this.enable();\n                            this.expand();\n                        }\n\n                        break;\n                    }\n\n                    case 'add': {\n                        this.matrix.addVariant(this.$container);\n                        break;\n                    }\n\n                    case 'delete': {\n                        if (batchAction) {\n                            if (confirm(Craft.t('commerce', 'Are you sure you want to delete the selected variants?'))) {\n                                this.matrix.deleteSelectedVariants();\n                            }\n                        }\n                        else {\n                            this.selfDestruct();\n                        }\n\n                        break;\n                    }\n                }\n            },\n\n            selfDestruct: function() {\n                this.$container.velocity(this.matrix.getHiddenVariantCss(this.$container), 'fast', $.proxy(function() {\n                    this.$container.remove();\n\n                    // If this is the default variant, set the first variant as default instead\n                    if (this.isDefault()) {\n                        var variant = this.matrix.$variantContainer.children(':first-child').data('variant');\n\n                        if (variant) {\n                            this.matrix.setDefaultVariant(variant);\n                        }\n                    }\n                }, this));\n            }\n        });\n\n\n})(jQuery);\n"],"names":["$","Craft","Commerce","VariantMatrix","Garnish","Base","extend","id","fieldBodyHtml","fieldFootHtml","inputNamePrefix","inputIdPrefix","$container","$variantContainer","$addVariantBtn","variantSort","variantSelect","defaultVariant","totalNewVariants","singleColumnMode","init","this","formatInputId","children","$variants","collapsedVariants","getCollapsedVariantIds","DragSort","handle","axis","filter","proxy","$targetItem","hasClass","getSelectedItems","collapseDraggees","magnetStrength","helperLagBase","helperOpacity","onSortChange","resetItemOrder","Select","multi","vertical","checkboxMode","i","length","$variant","eq","newMatch","data","match","parseInt","variant","Variant","inArray","collapse","initUnlimitedStockCheckbox","addListener","addVariant","$doc","ready","width","handleContainerResize","setDefaultVariant","unsetAsDefault","setAsDefault","$insertBefore","t","insertBefore","appendTo","$fieldsContainer","bodyHtml","getParsedVariantHtml","footHtml","$body","find","remove","setVariantsToSingleColMode","css","getHiddenVariantCss","velocity","opacity","$bod","append","initUiElements","addItems","requestAnimationFrame","scrollContainerToElement","collapseSelectedVariants","callOnSelectedVariants","expandSelectedVariants","disableSelectedVariants","enableSelectedVariants","deleteSelectedVariants","fn","$selectedItems","marginBottom","outerHeight","html","replace","$items","setVariantsToTwoColMode","removeClass","addClass","collapsedVariantStorageKey","siteUid","localStorage","filterArray","split","setCollapsedVariantIds","ids","join","rememberCollapsedVariantId","Storage","push","forgetCollapsedVariantId","collapsedVariantsIndex","splice","matrix","$titlebar","$previewContainer","$actionMenu","$collapsedInput","$defaultInput","$defaultBtn","isNew","collapsed","substr","$menuBtn","menuBtn","MenuBtn","menu","settings","onOptionSelect","hasAttr","ev","preventDefault","toggle","val","expand","animate","previewHtml","$fields","$inputs","inputPreviewText","j","value","$input","$maybeLightswitchContainer","parent","text","getText","getInputPostVal","Array","trim","duration","height","show","hide","setTimeout","collapsedContainerHeight","expandedContainerHeight","display","disable","isDefault","enable","attr","onMenuOptionSelect","option","batchAction","totalSelected","isSelected","confirm","selfDestruct","jQuery"],"sourceRoot":""}