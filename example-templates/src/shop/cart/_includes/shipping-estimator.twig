<!-- Template: {{ _self }}.twig -->
{% if not cart.getShippingAddress() %}
    <div class="[[classes.box.base]] max-w-sm">
        <h5 class="mt-0 font-bold">{{ 'Shipping Estimate' }}</h5>

        <div class="js-estimate-fields">
            {% set countries = craft.commerce.countries.allEnabledCountriesAsList %}
            {% set states = craft.commerce.states.allEnabledStatesAsListGroupedByCountryId %}
            <label class="m-0 mt-2 block" for="estimatedShippingAddress-countryId">{{ 'Country' }}</label>
            <select class="js-address-country js-estimate-country w-full [[classes.input]]"
                    name="estimatedShippingAddress[countryId]" data-modelname="estimatedShippingAddress">
                {% for key, option in countries %}
                    {% set optionValue = (cart.estimatedShippingAddress ? cart.estimatedShippingAddress.countryId : '') %}
                    <option value="{{ key }}" {% if key == optionValue %} selected{% endif %}>{{ option }}</option>
                {% endfor %}
            </select>

            <div class="js-estimate-state-box" data-modelname="estimatedShippingAddress">
                <label class="mb-0 mt-2 block" for="estimatedShippingAddress-state">{{ 'State' }}</label>
                {% set options = (cart.estimatedShippingAddress and states[cart.estimatedShippingAddress.countryId] is defined ? states[cart.estimatedShippingAddress.countryId] : []) %}
                <select id="estimatedShippingAddress-stateId"
                        name="estimatedShippingAddress[stateValue]"
                        class="js-address-stateId [[classes.input]] {% if options|length == 0 %}hidden{% endif %}"
                        data-modelname="estimatedShippingAddress">
                    {% for key, option in options %}
                        {% set optionValue = (cart.estimatedShippingAddress ? cart.estimatedShippingAddress.stateId : '') %}
                        <option value="{{ key }}" {% if key == optionValue %}selected{% endif %}>{{ option }}</option>
                    {% endfor %}
                </select>

                <input type="text"
                       id="estimatedShippingAddress-stateName"
                       {% if options|length == 0 %}name="estimatedShippingAddress[stateValue]"{% endif %}
                       data-modelname="estimatedShippingAddress"
                       class="js-address-stateName [[classes.input]] {% if options|length > 0 %}hidden{% endif %} w-full"
                       value="{{ cart.estimatedShippingAddress ? cart.estimatedShippingAddress.stateName : '' }}"/>
            </div>

            <label class="mb-0 mt-2 block" for="estimatedShippingAddress-zipCode">{{ 'Zip Code' }}</label>
            <input type="text"
                   id="estimatedShippingAddress-zipCode"
                   name="estimatedShippingAddress[zipCode]"
                   class="w-full [[classes.input]]"
                   value="{{ cart.estimatedShippingAddress ? cart.estimatedShippingAddress.zipCode : '' }}">

            <div class="mt-6">
                <label class="m-0">
                    <input type="checkbox"
                           {% if cart.estimatedShippingAddressId == cart.estimatedBillingAddressId %}checked{% endif %}
                           name="estimatedBillingAddressSameAsShipping"
                           value="1"/>
                    Billing Same as Shipping
                </label>
            </div>

            <div class="js-estimate-billing mt-6">
                <h5 class="mt-0 font-bold">{{ 'Tax Estimate' }}</h5>
                <label class="mb-0 mt-2 block" for="estimatedBillingAddress-countryId">{{ 'Country' }}</label>
                <select class="js-address-country w-full [[classes.input]] js-estimate-country"
                        name="estimatedBillingAddress[countryId]" data-modelname="estimatedBillingAddress">
                    {% for key, option in countries %}
                        {% set optionValue = (cart.estimatedBillingAddress ? cart.estimatedBillingAddress.countryId : '') %}
                        <option value="{{ key }}" {% if key == optionValue %} selected{% endif %}>{{ option }}</option>
                    {% endfor %}
                </select>

                <div class="js-estimate-state-box" data-modelname="estimatedBillingAddress">
                    <label class="mb-0 mt-2 block" for="estimatedBillingAddress-state">{{ 'State' }}</label>
                    {% set options = (cart.estimatedBillingAddress and states[cart.estimatedBillingAddress.countryId] is defined ? states[cart.estimatedBillingAddress.countryId] : []) %}
                    <select id="estimatedBillingAddress-stateId"
                            name="estimatedBillingAddress[stateValue]"
                            class="js-address-stateId w-full [[classes.input]] {% if options|length == 0 %}hidden{% endif %}"
                            data-modelname="estimatedBillingAddress">
                        {% for key, option in options %}
                            {% set optionValue = (cart.estimatedBillingAddress ? cart.estimatedBillingAddress.stateId : '') %}
                            <option value="{{ key }}"
                                    {% if key == optionValue %}selected{% endif %}>{{ option }}
                            </option>
                        {% endfor %}
                    </select>
                    <input type="text"
                           id="estimatedBillingAddress-stateName"
                           class="js-address-stateName {% if options|length > 0 %}hidden{% endif %} w-full [[classes.input]]"
                           {% if options|length == 0 %}name="estimatedBillingAddress[stateValue]"{% endif %}
                           data-modelname="estimatedBillingAddress"
                           value="{{ cart.estimatedBillingAddress ? cart.estimatedBillingAddress.stateName : '' }}">
                </div>

                <label class="mb-0 mt-2 block" for="estimatedBillingAddress-zipCode">{{ 'Zip Code' }}</label>
                <input type="text"
                       id="estimatedBillingAddress-zipCode"
                       name="estimatedBillingAddress[zipCode]"
                       class="w-full [[classes.input]]"
                       value="{{ cart.estimatedBillingAddress ? cart.estimatedBillingAddress.zipCode : '' }}">
            </div>
        </div>

        <div class="js-estimate-shipping-methods">
            {% if cart.availableShippingMethodOptions|length and cart.estimatedShippingAddressId %}
                <div class="mt-3">
                    {% for handle, method in cart.availableShippingMethodOptions %}
                        <div class="js-shipping-select">
                            <label>
                                <input type="radio"
                                       name="shippingMethodHandle"
                                       value="{{ handle }}"
                                       {% if handle == cart.shippingMethodHandle %}checked{% endif %} />
                                {{ method.name }}
                                <span title="{{ method.priceForOrder(cart) }}">{{ method.priceForOrder(cart)|commerceCurrency(cart.currency) }}</span>
                            </label>
                        </div>
                    {% endfor %}
                </div>
                <div class="mt-6">
                    <a class="[[classes.a]] js-estimate-show-fields" href="#">{{ 'Show Estimate Fields' }}</a>
                </div>
            {% endif %}
        </div>
    </div>

    {% js %}
    window.states = {{ craft.commerce.states.allEnabledStatesAsListGroupedByCountryId|json_encode|raw }};
    {% endjs %}

    {% js %}
    var $estimateShippingMethodsContainer = document.querySelector('.js-estimate-shipping-methods');
    var $estimateFieldsContainer = document.querySelector('.js-estimate-fields');
    var $estimateShowFieldsButton = document.querySelector('.js-estimate-show-fields');
    var $estimateBilling = document.querySelector('.js-estimate-billing');
    var $estimateBillingSameAsShipping = document.querySelector('input[name="estimatedBillingAddressSameAsShipping"]');
    var $estimateCountrySelects = document.querySelector('select.js-estimate-country');

    function _estimatorHide(el) {
        el.classList.add('hidden');
        var inputs = el.querySelectorAll('input,select');
        if (inputs.length) {
            inputs.forEach(function(el) {
                el.disabled = true;
            });
        }
    }

    function _estimatorShow(el) {
        el.classList.remove('hidden');
        var inputs = el.querySelectorAll('input,select');
        if (inputs.length) {
            inputs.forEach(function(el) {
                el.disabled = false;
            });
        }
    }

    // Setup "same as" checkbox
    if ($estimateBillingSameAsShipping.checked) {
        _estimatorHide($estimateBilling);
    }

    // Handle the change event for the "same as" checkbox
    $estimateBillingSameAsShipping.addEventListener('change', function(ev) {
        var $this = ev.target;
        if ($this.checked) {
            _estimatorHide($estimateBilling);
        } else {
            _estimatorShow($estimateBilling);
        }
    });

    // Setup initial state Showing/hiding of the shipping method selection
    var shippingSelect = $estimateShippingMethodsContainer.querySelector('.js-shipping-select');
    if (shippingSelect) {
        _estimatorHide($estimateFieldsContainer);
    } else {
        _estimatorHide($estimateShippingMethodsContainer);
    }

    // Handle click event for returning to the estimate fields
    if ($estimateShowFieldsButton) {
        $estimateShowFieldsButton.addEventListener('click', function(ev) {
            ev.preventDefault();

            if ($estimateFieldsContainer.classList.contains('hidden')) {
                _estimatorShow($estimateFieldsContainer);
                _estimatorHide($estimateShippingMethodsContainer);
            } else {
                _estimatorHide($estimateFieldsContainer);
                _estimatorShow($estimateShippingMethodsContainer);
            }
        });
    }

    // Handle change event for country selection for both shipping and billing
    $estimateCountrySelects.addEventListener('change', function(ev) {
        // get the value of the selected country.
        var $this = ev.target;
        var cid = $this.value;
        var $box = document.querySelector('.js-estimate-state-box[data-modelname="' + $this.dataset.modelname + '"]');
        var $states = $box.querySelector('select.js-address-stateId');
        var $stateName = $box.querySelector('input.js-address-stateName');
        var $statesOption = $states.querySelectorAll('option');

        if ($statesOption.length) {
            $statesOption.forEach(function(el) {
                el.remove();
            });
        }

        if (window.states.hasOwnProperty(cid)) {
            // We have states for this country, show the states drop down.
            $states.classList.remove('hidden');
            $states.setAttribute('name', $states.dataset.modelname + '[stateValue]');

            // We have states for this country, hide the stateName input.
            $stateName.removeAttribute('name');
            $stateName.classList.add('hidden');
            $stateName.value = '';

            // Add all states as options to drop down.
            for (var id in window.states[cid]) {
                var state = window.states[cid][id];
                var $option = document.createElement('OPTION');
                $option.text = state;
                $option.value = id;
                $states.appendChild($option);
            }
        } else {
            // hide the states dropdown, since this country has none.
            $states.classList.add('hidden');
            $states.removeAttribute('name');

            // show the stateName
            $stateName.classList.remove('hidden');
            $stateName.setAttribute('name', $stateName.dataset.modelname + '[stateValue]');
        }
    });
    {% endjs %}
{% endif %}
