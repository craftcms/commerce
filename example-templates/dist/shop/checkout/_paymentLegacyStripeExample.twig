{% extends 'shop/_private/layouts' %}

{# @var cart \craft\commerce\elements\Order #}

{% block main %}

  {% if not cart.gateway %}
    {% redirect 'shop/checkout/payment-method' %}
  {% endif %}

  <div class="md:flex md:-mx-8">
    <div class="md:w-2/3 md:px-8">
      {% if craft.commerce.settings.allowCheckoutWithoutPayment %}
        <div class="border-b border-gray-300 pb-10 mb-10">
          <h1 class="font-bold text-xl">
            {{- 'Pay Later'|t -}}
          </h1>
          <p>{{ 'Commit to buy now, and make payment later...'|t }}</p>
          <div class="mt-1">
            <form id="completeForm"
                  method="post"
                  action=""
            >
              {{ csrfInput() }}
              {{ actionInput('commerce/cart/complete') }}
              {{ redirectInput(siteUrl('/shop/customer/order', {
                number: cart.number,
                success: 'true'
              })) }}
              {{ successMessageInput('Thank you for your order. We’ve received it and are awaiting payment.'|t) }}
              {{ tag('button', {
                type: 'submit',
                class: 'cursor-pointer rounded px-4 py-2 inline-block bg-blue-500 hover:bg-blue-600 text-white hover:text-white',
                text: 'Commit'|t
              }) }}
            </form>
          </div>
        </div>
      {% endif %}

      <h1 class="font-bold text-xl">
        {{- 'Payment'|t -}}
      </h1>

      {% if cart.gatewayId or cart.paymentSourceId %}
        {% if paymentForm is defined %}
          {% for key, errors in paymentForm.getErrors() %}
            {% for error in errors %}
              {% if loop.first %}<ul>{% endif %}
                <li class="text-red-600"><strong>{{ key }}</strong> {{ error }}</li>
              {% if loop.last %}</ul>{% endif %}
            {% endfor %}
          {% endfor %}
        {% endif %}

        <div class="mt-3">
            <form method="post" action="" id="payment-form"
                  data-payment-form-namespace="{{ cart.gateway.handle|commercePaymentFormNamespace }}"
            >
            {{ csrfInput() }}
            {{ actionInput('commerce/payments/pay') }}
            {{ redirectInput(siteUrl('/shop/customer/order', {
              number: cart.number,
              success: 'true'
            })) }}
            {{ hiddenInput('cancelUrl', siteUrl('/shop/checkout/payment')|hash) }}
            {{ hiddenInput('orderEmail', cart.email) }}

            {% if cart.gatewayId %}
              {{ hiddenInput('gatewayId', cart.gatewayId) }}


              <script src="https://js.stripe.com/v3/"></script>


              {% namespace cart.gateway.handle|commercePaymentFormNamespace %}
              <div class="form-row">
                <label for="card-element">
                  Credit or debit card input fields
                </label>
                <div id="card-element">
                  {# Stripe’s JavaScript will insert Stripe Elements here #}
                </div>
                {# Used to display form errors #}
                <div id="card-errors" role="alert"></div>
              </div>
              {% endnamespace %}

                <button id="submit-button" type="submit">Submit Payment</button>




              {# Force in some basic styling for the gateway-provided form markup (better to build your own form markup!) #}
              {% include 'shop/checkout/_includes/base-payment-form-styles' %}

              {% if cart.gateway.supportsPaymentSources() and currentUser %}
                <div class="checkbox">
                  <label>
                    {{ input('checkbox', 'savePaymentSource', 1, {
                      class: ['inline-block', 'mr-1']
                    }) }}
                    {{ 'Save card for future purchases'|t }}
                  </label>
                </div>
              {% endif %}
            {% else %}
              {{ cart.gateway.getPaymentConfirmationFormHtml({})|raw }}
            {% endif %}

            {% set user = cart.email ? craft.users.email(cart.email).one() : null %}
            {% if not user or not user.getIsCredentialed() %}
              <div class="mt-3">
                <label for="registerUserOnOrderComplete">
                  {{ hiddenInput('registerUserOnOrderComplete', false) }}
                  {{ input('checkbox', 'registerUserOnOrderComplete', 1, {
                    id: 'registerUserOnOrderComplete'
                  }) }}
                  {{ 'Create an account'|t }}
                </label>
              </div>
            {% endif %}

            {{ include('shop/checkout/_includes/partial-payment') }}

            {% if cart.gateway.showPaymentFormSubmitButton() %}
              <div class="mt-3 text-right">
                {{ tag('button', {
                  type: 'submit',
                  class: 'cursor-pointer rounded px-4 py-2 inline-block bg-blue-500 hover:bg-blue-600 text-white hover:text-white',
                  text: 'Pay'|t
                }) }}
              </div>
            {% endif %}
          </form>
        </div>
      {% endif %}
    </div>

    <div class="mt-8 md:w-1/3 md:px-8 md:mt-0">
      {{ include('shop/checkout/_includes/order-summary', {
        showShippingAddress: true,
        showShippingMethod: true
      }) }}
    </div>
  </div>

<script>


    var stripe = Stripe('{{ parseEnv(cart.gateway.publishableKey) }}');
    // Create an instance of Elements
    var elements = stripe.elements();

    var form = document.getElementById('payment-form');
    var paymentFormNamespace = form.dataset.paymentFormNamespace;

    var style = {
        base: {
            color: '#32325d',
            fontFamily: '"Helvetica Neue", Helvetica, sans-serif',
            fontSmoothing: 'antialiased',
            fontSize: '16px',
            '::placeholder': {
                color: '#aab7c4'
            }
        },
        invalid: {
            color: '#fa755a',
            iconColor: '#fa755a'
        }
    };

    // Create an instance of the card Element
    var card = elements.create('card', { style: style });

    card.mount('#paymentForm-stripe-card-element');

    card.on('change', function(event) {
        var displayError = document.getElementById('paymentForm-stripe-card-errors');
        if (event.error) {
            displayError.textContent = event.error.message;
        } else {
            displayError.textContent = '';
        }
    });

    form.addEventListener('submit', function(event) {
        event.preventDefault();

        var paymentData = {
            billing_details: {
                email: "{{ cart.email }}",
            }
        };

        stripe.createPaymentMethod('card', card, paymentData).then(function(result) {
            if (result.error) {
                // Show the user any errors
                var errorElement = document.getElementById('paymentForm-stripe-card-errors');
                errorElement.textContent = result.error.message;
            } else {
                // Insert the token ID into the form so it gets submitted to the server
                var form = document.getElementById('payment-form');
                var hiddenInput = document.createElement('input');
                hiddenInput.setAttribute('type', 'hidden');
                hiddenInput.setAttribute('name', paymentFormNamespace + '[paymentMethodId]'); // Craft Commerce only needs this
                hiddenInput.setAttribute('value', result.paymentMethod.id);
                form.appendChild(hiddenInput);

                form.submit();
            }
        });
    });

    </script>

{% endblock %}
